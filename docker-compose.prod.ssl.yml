version: '3'
services:
        app:
                build:
                        context: . # Build using the Dockerfile present in the current dir
                        args:
                                UID: $USERID
                                GID: $GROUPID
                                #user: $USER
                volumes:
                        - .:/code
                        - ./staticfiles:/code/staticfiles
                env_file:
                        - .env   # run ./setupEnv.sh so that above args are picked up. 
                # ports:
                #         - "8000:8000"
                expose:   # Using expose instead of ports so that the port 8000 is only exposed internally to other containers.
                        - 8000
                depends_on:
                        - elasticsearch
                        - db
                #user: "${USERID}:${GROUPID}"  # Simpler alternative to useradd defined in Dockerfile.
                command: bash docker-entrypoint.sh #Run the startupscript which will make the migrations and run the dev server

        elasticsearch:
                image: launcher.gcr.io/google/elasticsearch2
                ports:
                        - "9200:9200"
                        - "9300:9300"
                volumes:
                        - esdata:/usr/share/elasticsearch/data

        db:
                image: postgres
                restart: always
                env_file:
                        - .env
                environment:
                        - POSTGRES_USER=${SQL_USER}
                        - POSTGRES_PASSWORD=${SQL_PASSWORD}
                        - POSTGRES_DB=${SQL_DATABASE}
                volumes:
                        - ./postgres-data:/var/lib/postgresql/data
                ports:
                        - 5432:5432
        nginx:
                image: nginx:1.16-alpine
                restart: unless-stopped
                ports:
                        - "80:80"
                        - "443:443"
                depends_on:
                        - app
                volumes:
                        # The files in static folder will show up at /trackzilla/static
                        - ./staticfiles:/trackzilla/staticfiles
                        - ./data/nginx/conf_ssl.d:/etc/nginx/conf.d
                        - ./data/certbot/conf:/etc/letsencrypt
                        - ./data/certbot/www:/var/www/certbot
                command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"

        certbot:
                image: certbot/certbot
                restart: unless-stopped
                volumes:
                        - ./data/certbot/conf:/etc/letsencrypt
                        - ./data/certbot/www:/var/www/certbot
                entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 5d & wait $${!}; done;'"

volumes:
  esdata:
    driver: local

